{"version":3,"sources":["firebase.js","contexts/AuthContext.js","containers/CenteredContainer.js","containers/SignUp.js","containers/Profile.js","containers/Login.js","containers/ForgotPassword.js","components/authentication/PrivateRoute.js","components/authentication/UpdateProfile.js","components/hooks/UseFolder.js","components/AddFolderButton.js","components/Navbar.js","components/Folder.js","components/FolderBreadcrumbs.js","components/AddFileButton.js","components/File.js","containers/Dashboard.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","database","folders","collection","files","formatDoc","doc","id","data","getCurrentTimestamp","FieldValue","serverTimestamp","storage","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","CenteredContainer","Container","className","style","minHeight","maxWidth","minWidth","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","handleSubmit","e","a","preventDefault","current","push","Card","Body","Alert","variant","Form","onSubmit","Group","Label","Control","type","ref","required","Button","disabled","to","Profile","handleLogout","pushState","onClick","Login","err","setErr","ForgotPassword","message","setMessage","PrivateRoute","Component","component","rest","render","props","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","ACTIONS","ROOT_FOLDER","name","path","reducer","state","payload","folderId","folder","childFolders","childFiles","AddFolderButton","currentFolder","open","setOpen","setName","closeModal","size","icon","faFolderPlus","Modal","show","onHide","add","parentId","userId","uid","createdAt","onChange","target","Footer","NavbarComponent","Navbar","bg","expand","Brand","as","Link","Folder","pathname","faFolder","FolderBreadcrumbs","Breadcrumb","listProps","map","index","Item","linkAs","linkProps","slice","active","AddFileButton","uploadingFiles","setUploadingFiles","faFileUpload","file","uuidV4","prevUploadingFiles","progress","filePath","join","uploadTask","put","on","snapshot","bytesTransferred","totalBytes","uploadFile","filter","getDownloadURL","url","where","get","existingFiles","existingFile","docs","update","opacity","position","left","length","ReactDOM","createPortal","bottom","right","Toast","onClose","Header","closeButton","ProgressBar","animated","now","label","Math","round","document","body","File","href","faFile","Dashboard","useParams","useLocation","useReducer","dispatch","console","log","orderBy","onSnapshot","useFolder","fluid","childFolder","childFile","App","exact","SignUp","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.615ac64b.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst app = firebase.initializeApp({\n  apiKey: \"AIzaSyA0X-Jxg1iGd3kVAbJNL6OcJ6Xf0Ey3RK0\",\n  authDomain: \"auth-dev-eb714.firebaseapp.com\",\n  projectId: \"auth-dev-eb714\",\n  storageBucket: \"auth-dev-eb714.appspot.com\",\n  messagingSenderId: \"701530536218\",\n  appId: \"1:701530536218:web:433f239b0a32f4bee614a3\",\n});\n\nconst firestore = app.firestore();\nexport const auth = app.auth();\n\nexport const database = {\n  folders: firestore.collection(\"folders\"),\n  files: firestore.collection(\"files\"),\n  formatDoc: (doc) => {\n    return { id: doc.id, ...doc.data() };\n  },\n  getCurrentTimestamp: firebase.firestore.FieldValue.serverTimestamp,\n};\n\nexport const storage = app.storage()\nexport default app;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../firebase\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword,\n  };\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nexport default function CenteredContainer({ children }) {\n  return (\n    <Container\n      className=\"d-flex align-items-center justify-content-center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <div className=\"w-100\" style={{ maxWidth: \"400px\", minWidth: \"300px\" }}>\n        {children}\n      </div>\n    </Container>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert,  } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport CenteredContainer from \"./CenteredContainer\";\n\nexport default function Signup() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { signup } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/login\");\n    } catch {\n      setError(\"Failed to create an account\");\n    }\n\n    setLoading(false);\n  };\n  return (\n    <CenteredContainer>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Sign Up\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Already have an account? <Link to=\"/login\">Log In</Link>\n      </div>\n    </CenteredContainer>\n  );\n}\n","import { Alert } from \"bootstrap\";\nimport React, { useState } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport CenteredContainer from \"./CenteredContainer\";\n\nexport default function Profile() {\n  const [error, setError] = useState(\"\");\n  const { currentUser, logout } = useAuth();\n\n  const history = useHistory();\n\n  const handleLogout = async () => {\n    setError(\"\");\n\n    try {\n      await logout();\n      history.pushState(\"/login\");\n    } catch {\n      setError(\"Failed to log out\");\n    }\n  };\n\n  return (\n    <CenteredContainer>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb4\">Profile</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <strong>Email: </strong> {currentUser.email}\n          <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\n            Update Profile\n          </Link>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Button variant=\"link\" onClick={handleLogout}>\n          Logout\n        </Button>\n      </div>\n    </CenteredContainer>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport CenteredContainer from \"./CenteredContainer\";\n\nexport default function Login() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const { login } = useAuth();\n  const [err, setErr] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      setErr(\"\");\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/\");\n    } catch {\n      setErr(\"Failed to sign in\");\n    }\n\n    setLoading(false);\n  };\n  return (\n    <CenteredContainer>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb4\">Log In</h2>\n          {err && <Alert variant=\"danger\">{err}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Log In\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/forgot-password\">Forgot password?</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/signup\">Register!</Link>\n      </div>\n    </CenteredContainer>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert, } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport CenteredContainer from \"./CenteredContainer\";\n\nexport default function ForgotPassword() {\n  const emailRef = useRef();\n\n  const { resetPassword } = useAuth();\n  const [err, setErr] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      setErr(\"\");\n      setMessage(\"\");\n      setLoading(true);\n      await resetPassword(emailRef.current.value);\n      setMessage(\"Check your email for further instructions!\");\n    } catch {\n      setErr(\"Failed to reset the password\");\n    }\n\n    setLoading(false);\n  };\n  return (\n    <CenteredContainer>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb4\">Password Reset</h2>\n          {err && <Alert variant=\"danger\">{err}</Alert>}\n          {message && <Alert variant=\"success\">{message}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Reset Password\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/login\">Login</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/signup\">Register!</Link>\n      </div>\n    </CenteredContainer>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  const { currentUser } = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return currentUser ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        );\n      }}\n    ></Route>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport CenteredContainer from \"../../containers/CenteredContainer\";\n\nexport default function UpdateProfile() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { currentUser, updatePassword, updateEmail } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (\n      (passwordRef.current.value !== passwordConfirmRef.current.value) |\n      (passwordRef.current.value === \"\")\n    ) {\n      return setError(\"Passwords do not match or is empty\");\n    }\n\n    const promises = [];\n    setLoading(true);\n    setError(\"\");\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value));\n    }\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value));\n    }\n\n    Promise.all(promises)\n      .then(() => {\n        history.push(\"/user\");\n      })\n      .catch(() => {\n        setError(\"Failed to update account\");\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }\n  return (\n    <CenteredContainer>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                ref={emailRef}\n                required\n                defaultValue={currentUser.email}\n              />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordRef}\n                placeholder=\"Leave it blank to keep it the same!\"\n              />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordConfirmRef}\n                placeholder=\"Leave it blank to keep it the same!\"\n              />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Update\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Link to=\"/user\">Cancel</Link>\n      </div>\n    </CenteredContainer>\n  );\n}\n","import { useEffect, useReducer } from \"react\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { database } from \"../../firebase\";\n\nconst ACTIONS = {\n  SELECT_FOLDER: \"select-folder\",\n  UPDATE_FOLDER: \"update-folder\",\n  SET_CHILD_FOLDERS: \"set-child-folders\",\n  SET_CHILD_FILES: \"set-child-files\",\n};\n\nexport const ROOT_FOLDER = {\n  name: \"Root\",\n  id: null,\n  path: [],\n};\n\n// When the state changes from useEffect of either folderId\n// or folder. We immediately change it to the state according\n// to the action taken\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case ACTIONS.SELECT_FOLDER:\n      return {\n        folderId: payload.folderId,\n        folder: payload.folder,\n        childFolders: [],\n        childFiles: [],\n      };\n\n    case ACTIONS.UPDATE_FOLDER:\n      return {\n        ...state,\n        folder: payload.folder,\n      };\n\n    case ACTIONS.SET_CHILD_FOLDERS:\n      return {\n        ...state,\n        childFolders: payload.childFolders,\n      };\n\n    case ACTIONS.SET_CHILD_FILES:\n      return {\n        ...state,\n        childFiles: payload.childFiles,\n      };\n    // If we use an action that does not exist,\n    // we use the default state\n    default:\n      return state;\n  }\n}\n\nexport function useFolder(folderId = null, folder = null) {\n  const [state, dispatch] = useReducer(reducer, {\n    folderId,\n    folder,\n    childFolders: [],\n    childFiles: [],\n  });\n\n  const { currentUser } = useAuth();\n\n  // Whenever folderId and folder changes, We will switch to\n  // the current state based on actions taken\n  useEffect(() => {\n    dispatch({\n      type: ACTIONS.SELECT_FOLDER,\n      payload: {\n        folderId,\n        folder,\n      },\n    });\n  }, [folderId, folder]);\n\n  useEffect(() => {\n    if (folderId === null) {\n      return dispatch({\n        type: ACTIONS.UPDATE_FOLDER,\n        payload: { folder: ROOT_FOLDER },\n      });\n    }\n\n    // What happens if we have a parent id, we need to access the database\n    database.folders\n      .doc(folderId)\n      .get()\n      .then((doc) => {\n        dispatch({\n          type: ACTIONS.UPDATE_FOLDER,\n          payload: { folder: database.formatDoc(doc) },\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n        // If the id is null, we set it to the root folder\n        dispatch({\n          type: ACTIONS.UPDATE_FOLDER,\n          payload: { folder: ROOT_FOLDER },\n        });\n      });\n  }, [folderId]);\n\n  useEffect(() => {\n    return database.folders\n      .where(\"parentId\", \"==\", folderId)\n      .where(\"userId\", \"==\", currentUser.uid)\n      .orderBy(\"createdAt\")\n      .onSnapshot((snapshot) => {\n        dispatch({\n          type: ACTIONS.SET_CHILD_FOLDERS,\n          payload: { childFolders: snapshot.docs.map(database.formatDoc) },\n        });\n      });\n\n    // return () => cleanup();\n  }, [folderId, currentUser]);\n\n  useEffect(() => {\n    return (\n      database.files\n        .where(\"folderId\", \"==\", folderId)\n        .where(\"userId\", \"==\", currentUser.uid)\n        // .orderBy(\"createdAt\")\n        .onSnapshot((snapshot) => {\n          dispatch({\n            type: ACTIONS.SET_CHILD_FILES,\n            payload: { childFiles: snapshot.docs.map(database.formatDoc) },\n          });\n        })\n    );\n\n    // return () => cleanup();\n  }, [folderId, currentUser]);\n\n  return state;\n}\n","import React, { useState } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFolderPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { database } from \"../firebase\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { ROOT_FOLDER } from \"./hooks/UseFolder\";\n\nexport default function AddFolderButton({ currentFolder }) {\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n  const { currentUser } = useAuth();\n\n  function openModal() {\n    setOpen(true);\n  }\n\n  function closeModal() {\n    setOpen(false);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (currentFolder === null) return;\n\n    const path = [...currentFolder.path];\n    if (currentFolder !== ROOT_FOLDER) {\n      path.push({\n        name: currentFolder.name,\n        id: currentFolder.id,\n      });\n    }\n\n    // Create a folder in the database\n    database.folders.add({\n      name: name,\n      parentId: currentFolder.id,\n      userId: currentUser.uid,\n      path: path,\n      createdAt: database.getCurrentTimestamp(),\n    });\n    setName(\"\");\n    closeModal();\n  }\n  return (\n    <>\n      <Button onClick={openModal} variant=\"outline-success\" size=\"sm\">\n        <FontAwesomeIcon icon={faFolderPlus} />\n      </Button>\n\n      <Modal show={open} onHide={closeModal}>\n        <Form onSubmit={handleSubmit}>\n          <Modal.Body>\n            <Form.Group>\n              <Form.Label>Folder name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                required\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={closeModal}>\n              Close\n            </Button>\n            <Button variant=\"success\" type=\"submit\">\n              Add Folder\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Navbar } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport default function NavbarComponent() {\n  return (\n    <Navbar bg=\"light\" expand=\"\">\n      <Navbar.Brand as={Link} to=\"/\">\n        WDS Drive\n      </Navbar.Brand>\n      <Navbar.Brand as={Link} to=\"/user\">\n        Profile\n      </Navbar.Brand>\n    </Navbar>\n  );\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFolder } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n\nexport default function Folder({ folder }) {\n  return (\n    <Button\n      // The state help us avoid refreshing whenever we have to navigate\n      // to a given folder\n      to={{\n        pathname: `/folder/${folder.id}`,\n        state: { folder: folder },\n      }}\n      variant=\"outline-dark\"\n      className=\"text-truncate w-100\"\n      as={Link}\n    >\n      <FontAwesomeIcon icon={faFolder} className=\"mr-2\" />\n      {folder.name}\n    </Button>\n  );\n}\n","import React from \"react\";\nimport { Breadcrumb } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { ROOT_FOLDER } from \"./hooks/UseFolder\";\n\nexport default function FolderBreadcrumbs({ currentFolder }) {\n  let path = currentFolder === ROOT_FOLDER ? [] : [ROOT_FOLDER];\n\n  // If we have the current folder, we will the path and with on the current path\n  if (currentFolder) path = [...path, ...currentFolder.path];\n\n  return (\n    <Breadcrumb\n      className=\"flex-grow-1 m-0\"\n      listProps={{ className: \"bg-white pl-0 m-0\" }}\n    >\n      {path.map((folder, index) => (\n        <Breadcrumb.Item\n          key={folder.id}\n          linkAs={Link}\n          linkProps={{\n            to: {\n              pathname: folder.id ? `/folder/${folder.id}` : \"/\",\n              // We dont want the refresh to be slow while fetching path\n              // So we pass the state along with the path\n              state: {\n                folder: { ...folder, path: path.slice(1, index) },\n              },\n            },\n          }}\n          className=\"text-truncate d-inline-block\"\n          style={{ maxWidth: \"150px\" }}\n        >\n          {folder.name}\n        </Breadcrumb.Item>\n      ))}\n\n      {currentFolder && (\n        <Breadcrumb.Item\n          className=\"text-truncate d-inline-block\"\n          style={{ maxWidth: \"200px\" }}\n          active\n        >\n          {currentFolder.name}\n        </Breadcrumb.Item>\n      )}\n    </Breadcrumb>\n  );\n}\n","import { faFileUpload } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { database, storage } from \"../firebase\";\nimport { ROOT_FOLDER } from \"./hooks/UseFolder\";\nimport { v4 as uuidV4 } from \"uuid\";\nimport ReactDOM from \"react-dom\";\nimport { Toast, ProgressBar } from \"react-bootstrap\";\n\nexport default function AddFileButton({ currentFolder }) {\n  const [uploadingFiles, setUploadingFiles] = useState([]);\n  const { currentUser } = useAuth();\n\n  function handleUpload(e) {\n    const file = e.target.files[0];\n    if (currentFolder == null || file == null) return;\n\n    const id = uuidV4();\n    setUploadingFiles((prevUploadingFiles) => [\n      ...prevUploadingFiles,\n      { id: id, name: file.name, progress: 0, error: false },\n    ]);\n    const filePath =\n      currentFolder === ROOT_FOLDER\n        ? `${currentFolder.path.join(\"/\")}/${file.name}`\n        : `${currentFolder.path.join(\"/\")}/${currentFolder.name}/${file.name}`;\n\n    const uploadTask = storage\n      .ref(`/files/${currentUser.uid}/${filePath}`)\n      .put(file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes;\n        setUploadingFiles((prevUploadingFiles) => {\n          return prevUploadingFiles.map((uploadFile) => {\n            if (uploadFile.id === id) {\n              return { ...uploadFile, progress: progress };\n            }\n\n            return uploadFile;\n          });\n        });\n      },\n      () => {\n        setUploadingFiles((prevUploadingFiles) => {\n          return prevUploadingFiles.map((uploadFile) => {\n            if (uploadFile.id === id) {\n              return { ...uploadFile, error: true };\n            }\n            return uploadFile;\n          });\n        });\n      },\n      () => {\n        setUploadingFiles((prevUploadingFiles) => {\n          return prevUploadingFiles.filter((uploadFile) => {\n            return uploadFile.id !== id;\n          });\n        });\n\n        uploadTask.snapshot.ref.getDownloadURL().then((url) => {\n          database.files\n            .where(\"name\", \"==\", file.name)\n            .where(\"userId\", \"==\", currentUser.uid)\n            .where(\"folderId\", \"==\", currentFolder.id)\n            .get()\n            .then((existingFiles) => {\n              const existingFile = existingFiles.docs[0];\n              if (existingFile) {\n                existingFile.ref.update({ url: url });\n              } else {\n                database.files.add({\n                  url: url,\n                  name: file.name,\n                  createdAt: database.getCurrentTimestamp(),\n                  folderId: currentFolder.id,\n                  userId: currentUser.uid,\n                });\n              }\n            });\n        });\n      }\n    );\n  }\n\n  return (\n    <>\n      <label className=\"btn btn-outline-success btn-sm m-0 mr-2\">\n        <FontAwesomeIcon icon={faFileUpload} />\n        <input\n          type=\"file\"\n          onChange={handleUpload}\n          style={{ opacity: 0, position: \"absolute\", left: \"-9999px\" }}\n        />\n      </label>\n      {uploadingFiles.length > 0 &&\n        ReactDOM.createPortal(\n          <div\n            style={{\n              position: \"absolute\",\n              bottom: \"1rem\",\n              right: \"1rem\",\n              maxWidth: \"250px\",\n            }}\n          >\n            {uploadingFiles.map((file) => (\n              <Toast\n                key={file.id}\n                onClose={() => {\n                  setUploadingFiles((prevUploadingFiles) => {\n                    return prevUploadingFiles.filter((uploadFile) => {\n                      return uploadFile.id !== file.id;\n                    });\n                  });\n                }}\n              >\n                <Toast.Header\n                  closeButton={file.error}\n                  className=\"text-truncate w-100 d-block\"\n                >\n                  {file.name}\n                </Toast.Header>\n                <Toast.Body>\n                  <ProgressBar\n                    animated={!file.error}\n                    variant={file.error ? \"danger\" : \"primary\"}\n                    now={file.error ? 100 : file.progress * 100}\n                    label={\n                      file.error\n                        ? \"Error\"\n                        : `${Math.round(file.progress * 100)}%`\n                    }\n                  />\n                </Toast.Body>\n              </Toast>\n            ))}\n          </div>,\n          document.body\n        )}\n    </>\n  );\n}\n","import { faFile } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nexport default function File({ file }) {\n  return (\n    <a\n      href={file.url}\n      target=\"_blank\"\n      className=\"btn btn-outline-dark text-truncate w-100\"\n    >\n      <FontAwesomeIcon icon={faFile} className=\"mr-2\" />\n      {file.name}\n    </a>\n  );\n}\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport AddFolderButton from \"../components/AddFolderButton\";\nimport { useFolder } from \"../components/hooks/UseFolder\";\nimport Navbar from \"../components/Navbar\";\nimport Folder from \"../components/Folder\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport FolderBreadcrumbs from \"../components/FolderBreadcrumbs\";\nimport AddFileButton from \"../components/AddFileButton\";\nimport File from \"../components/File\";\n\nexport default function Dashboard() {\n  const { folderId } = useParams();\n  // This state  will keep current location.\n  // We passing in the array of current path, but sliced to make\n  // navigation easier and quick\n  const { state = {} } = useLocation();\n  const { folder, childFolders, childFiles } = useFolder(\n    folderId,\n    state.folder\n  );\n  console.log(childFolders);\n  return (\n    <>\n      <Navbar />\n      <Container fluid>\n        <div className=\"d-flex align-items-center\">\n          <FolderBreadcrumbs currentFolder={folder} />\n          <AddFileButton currentFolder={folder} />\n          <AddFolderButton currentFolder={folder} />\n        </div>\n\n        {childFolders.length > 0 && (\n          <div className=\"d-flex flex-wrap\">\n            {childFolders.map((childFolder) => (\n              <div\n                key={childFolder.id}\n                style={{ maxWidth: \"250px\" }}\n                className=\"p-2\"\n              >\n                <Folder folder={childFolder} />\n              </div>\n            ))}\n          </div>\n        )}\n\n        {childFiles.length > 0 && <hr />}\n        {childFiles.length > 0 && (\n          <div className=\"d-flex flex-wrap\">\n            {childFiles.map((childFile) => (\n              <div\n                key={childFile.id}\n                style={{ maxWidth: \"250px\" }}\n                className=\"p-2\"\n              >\n                <File file={childFile} />\n              </div>\n            ))}\n          </div>\n        )}\n      </Container>\n    </>\n  );\n}\n","import React from \"react\";\nimport SignUp from \"./containers/SignUp\";\nimport Profile from \"./containers/Profile\";\nimport Login from \"./containers/Login\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ForgotPassword from \"./containers/ForgotPassword\";\n\nimport PrivateRoute from \"./components/authentication/PrivateRoute\";\nimport UpdateProfile from \"./components/authentication/UpdateProfile\";\nimport Dashboard from \"./containers/Dashboard\";\n\nfunction App() {\n  return (\n    <Router>\n      <AuthProvider>\n        <Switch>\n          {/* Drive */}\n          <PrivateRoute exact path=\"/\" component={Dashboard} />\n          <PrivateRoute exact path=\"/folder/:folderId\" component={Dashboard} />\n          {/* Profle */}\n          <PrivateRoute path=\"/user\" component={Profile} />\n          <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n\n          {/* Auth */}\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/forgot-password\" component={ForgotPassword} />\n        </Switch>\n      </AuthProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}